{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.SiriWave = factory());\n})(this, function () {\n  'use strict';\n\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation.\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n  purpose with or without fee is hereby granted.\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n  PERFORMANCE OF THIS SOFTWARE.\r\n  ***************************************************************************** */\n  var __assign = function () {\n    __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n    };\n    return __assign.apply(this, arguments);\n  };\n  function __rest(s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n  }\n  var ClassicCurve = /** @class */function () {\n    function ClassicCurve(ctrl, definition) {\n      this.ATT_FACTOR = 4;\n      this.GRAPH_X = 2;\n      this.AMPLITUDE_FACTOR = 0.6;\n      this.ctrl = ctrl;\n      this.definition = definition;\n    }\n    ClassicCurve.prototype.globalAttFn = function (x) {\n      return Math.pow(this.ATT_FACTOR / (this.ATT_FACTOR + Math.pow(x, this.ATT_FACTOR)), this.ATT_FACTOR);\n    };\n    ClassicCurve.prototype.xPos = function (i) {\n      return this.ctrl.width * ((i + this.GRAPH_X) / (this.GRAPH_X * 2));\n    };\n    ClassicCurve.prototype.yPos = function (i) {\n      return this.AMPLITUDE_FACTOR * (this.globalAttFn(i) * (this.ctrl.heightMax * this.ctrl.amplitude) * (1 / this.definition.attenuation) * Math.sin(this.ctrl.opt.frequency * i - this.ctrl.phase));\n    };\n    ClassicCurve.prototype.draw = function () {\n      var ctx = this.ctrl.ctx;\n      ctx.moveTo(0, 0);\n      ctx.beginPath();\n      var finalColor = this.definition.color || this.ctrl.color;\n      var colorHex = finalColor.replace(/rgb\\(/g, \"\").replace(/\\)/g, \"\");\n      ctx.strokeStyle = \"rgba(\".concat(colorHex, \",\").concat(this.definition.opacity, \")\");\n      ctx.lineWidth = this.definition.lineWidth;\n      // Cycle the graph from -X to +X every PX_DEPTH and draw the line\n      for (var i = -this.GRAPH_X; i <= this.GRAPH_X; i += this.ctrl.opt.pixelDepth) {\n        ctx.lineTo(this.xPos(i), this.ctrl.heightMax + this.yPos(i));\n      }\n      ctx.stroke();\n    };\n    ClassicCurve.getDefinition = function () {\n      return [{\n        attenuation: -2,\n        lineWidth: 1,\n        opacity: 0.1\n      }, {\n        attenuation: -6,\n        lineWidth: 1,\n        opacity: 0.2\n      }, {\n        attenuation: 4,\n        lineWidth: 1,\n        opacity: 0.4\n      }, {\n        attenuation: 2,\n        lineWidth: 1,\n        opacity: 0.6\n      }, {\n        attenuation: 1,\n        lineWidth: 1.5,\n        opacity: 1\n      }];\n    };\n    return ClassicCurve;\n  }();\n  var iOS9Curve = /** @class */function () {\n    function iOS9Curve(ctrl, definition) {\n      this.GRAPH_X = 25;\n      this.AMPLITUDE_FACTOR = 0.8;\n      this.SPEED_FACTOR = 1;\n      this.DEAD_PX = 2;\n      this.ATT_FACTOR = 4;\n      this.DESPAWN_FACTOR = 0.02;\n      this.NOOFCURVES_RANGES = [2, 5];\n      this.AMPLITUDE_RANGES = [0.3, 1];\n      this.OFFSET_RANGES = [-3, 3];\n      this.WIDTH_RANGES = [1, 3];\n      this.SPEED_RANGES = [0.5, 1];\n      this.DESPAWN_TIMEOUT_RANGES = [500, 2000];\n      this.ctrl = ctrl;\n      this.definition = definition;\n      this.noOfCurves = 0;\n      this.spawnAt = 0;\n      this.prevMaxY = 0;\n      this.phases = [];\n      this.offsets = [];\n      this.speeds = [];\n      this.finalAmplitudes = [];\n      this.widths = [];\n      this.amplitudes = [];\n      this.despawnTimeouts = [];\n      this.verses = [];\n    }\n    iOS9Curve.prototype.getRandomRange = function (e) {\n      return e[0] + Math.random() * (e[1] - e[0]);\n    };\n    iOS9Curve.prototype.spawnSingle = function (ci) {\n      this.phases[ci] = 0;\n      this.amplitudes[ci] = 0;\n      this.despawnTimeouts[ci] = this.getRandomRange(this.DESPAWN_TIMEOUT_RANGES);\n      this.offsets[ci] = this.getRandomRange(this.OFFSET_RANGES);\n      this.speeds[ci] = this.getRandomRange(this.SPEED_RANGES);\n      this.finalAmplitudes[ci] = this.getRandomRange(this.AMPLITUDE_RANGES);\n      this.widths[ci] = this.getRandomRange(this.WIDTH_RANGES);\n      this.verses[ci] = this.getRandomRange([-1, 1]);\n    };\n    iOS9Curve.prototype.getEmptyArray = function (count) {\n      return new Array(count);\n    };\n    iOS9Curve.prototype.spawn = function () {\n      this.spawnAt = Date.now();\n      this.noOfCurves = Math.floor(this.getRandomRange(this.NOOFCURVES_RANGES));\n      this.phases = this.getEmptyArray(this.noOfCurves);\n      this.offsets = this.getEmptyArray(this.noOfCurves);\n      this.speeds = this.getEmptyArray(this.noOfCurves);\n      this.finalAmplitudes = this.getEmptyArray(this.noOfCurves);\n      this.widths = this.getEmptyArray(this.noOfCurves);\n      this.amplitudes = this.getEmptyArray(this.noOfCurves);\n      this.despawnTimeouts = this.getEmptyArray(this.noOfCurves);\n      this.verses = this.getEmptyArray(this.noOfCurves);\n      for (var ci = 0; ci < this.noOfCurves; ci++) {\n        this.spawnSingle(ci);\n      }\n    };\n    iOS9Curve.prototype.globalAttFn = function (x) {\n      return Math.pow(this.ATT_FACTOR / (this.ATT_FACTOR + Math.pow(x, 2)), this.ATT_FACTOR);\n    };\n    iOS9Curve.prototype.sin = function (x, phase) {\n      return Math.sin(x - phase);\n    };\n    iOS9Curve.prototype.yRelativePos = function (i) {\n      var y = 0;\n      for (var ci = 0; ci < this.noOfCurves; ci++) {\n        // Generate a static T so that each curve is distant from each oterh\n        var t = 4 * (-1 + ci / (this.noOfCurves - 1) * 2);\n        // but add a dynamic offset\n        t += this.offsets[ci];\n        var k = 1 / this.widths[ci];\n        var x = i * k - t;\n        y += Math.abs(this.amplitudes[ci] * this.sin(this.verses[ci] * x, this.phases[ci]) * this.globalAttFn(x));\n      }\n      // Divide for NoOfCurves so that y <= 1\n      return y / this.noOfCurves;\n    };\n    iOS9Curve.prototype.yPos = function (i) {\n      return this.AMPLITUDE_FACTOR * this.ctrl.heightMax * this.ctrl.amplitude * this.yRelativePos(i) * this.globalAttFn(i / this.GRAPH_X * 2);\n    };\n    iOS9Curve.prototype.xPos = function (i) {\n      return this.ctrl.width * ((i + this.GRAPH_X) / (this.GRAPH_X * 2));\n    };\n    iOS9Curve.prototype.drawSupportLine = function () {\n      var ctx = this.ctrl.ctx;\n      var coo = [0, this.ctrl.heightMax, this.ctrl.width, 1];\n      var gradient = ctx.createLinearGradient.apply(ctx, coo);\n      gradient.addColorStop(0, \"transparent\");\n      gradient.addColorStop(0.1, \"rgba(255,255,255,.5)\");\n      gradient.addColorStop(1 - 0.1 - 0.1, \"rgba(255,255,255,.5)\");\n      gradient.addColorStop(1, \"transparent\");\n      ctx.fillStyle = gradient;\n      ctx.fillRect.apply(ctx, coo);\n    };\n    iOS9Curve.prototype.draw = function () {\n      var ctx = this.ctrl.ctx;\n      ctx.globalAlpha = 0.7;\n      ctx.globalCompositeOperation = \"lighter\";\n      if (this.spawnAt === 0) {\n        this.spawn();\n      }\n      if (this.definition.supportLine) {\n        // Draw the support line\n        return this.drawSupportLine();\n      }\n      for (var ci = 0; ci < this.noOfCurves; ci++) {\n        if (this.spawnAt + this.despawnTimeouts[ci] <= Date.now()) {\n          this.amplitudes[ci] -= this.DESPAWN_FACTOR;\n        } else {\n          this.amplitudes[ci] += this.DESPAWN_FACTOR;\n        }\n        this.amplitudes[ci] = Math.min(Math.max(this.amplitudes[ci], 0), this.finalAmplitudes[ci]);\n        this.phases[ci] = (this.phases[ci] + this.ctrl.speed * this.speeds[ci] * this.SPEED_FACTOR) % (2 * Math.PI);\n      }\n      var maxY = -Infinity;\n      // Write two opposite waves\n      for (var _i = 0, _a = [1, -1]; _i < _a.length; _i++) {\n        var sign = _a[_i];\n        ctx.beginPath();\n        for (var i = -this.GRAPH_X; i <= this.GRAPH_X; i += this.ctrl.opt.pixelDepth) {\n          var x = this.xPos(i);\n          var y = this.yPos(i);\n          ctx.lineTo(x, this.ctrl.heightMax - sign * y);\n          maxY = Math.max(maxY, y);\n        }\n        ctx.closePath();\n        ctx.fillStyle = \"rgba(\".concat(this.definition.color, \", 1)\");\n        ctx.strokeStyle = \"rgba(\".concat(this.definition.color, \", 1)\");\n        ctx.fill();\n      }\n      if (maxY < this.DEAD_PX && this.prevMaxY > maxY) {\n        this.spawnAt = 0;\n      }\n      this.prevMaxY = maxY;\n      return null;\n    };\n    iOS9Curve.getDefinition = function () {\n      return [{\n        color: \"255,255,255\",\n        supportLine: true\n      }, {\n        // blue\n        color: \"15, 82, 169\"\n      }, {\n        // red\n        color: \"173, 57, 76\"\n      }, {\n        // green\n        color: \"48, 220, 155\"\n      }];\n    };\n    return iOS9Curve;\n  }();\n  var SiriWave = /** @class */function () {\n    function SiriWave(_a) {\n      var _this = this;\n      var container = _a.container,\n        rest = __rest(_a, [\"container\"]);\n      // Phase of the wave (passed to Math.sin function)\n      this.phase = 0;\n      // Boolean value indicating the the animation is running\n      this.run = false;\n      // Curves objects to animate\n      this.curves = [];\n      var csStyle = window.getComputedStyle(container);\n      this.opt = __assign({\n        container: container,\n        style: \"ios\",\n        ratio: window.devicePixelRatio || 1,\n        speed: 0.2,\n        amplitude: 1,\n        frequency: 6,\n        color: \"#fff\",\n        cover: false,\n        width: parseInt(csStyle.width.replace(\"px\", \"\"), 10),\n        height: parseInt(csStyle.height.replace(\"px\", \"\"), 10),\n        autostart: true,\n        pixelDepth: 0.02,\n        lerpSpeed: 0.1\n      }, rest);\n      /**\n       * Actual speed of the animation. Is not safe to change this value directly, use `setSpeed` instead.\n       */\n      this.speed = Number(this.opt.speed);\n      /**\n       * Actual amplitude of the animation. Is not safe to change this value directly, use `setAmplitude` instead.\n       */\n      this.amplitude = Number(this.opt.amplitude);\n      /**\n       * Width of the canvas multiplied by pixel ratio\n       */\n      this.width = Number(this.opt.ratio * this.opt.width);\n      /**\n       * Height of the canvas multiplied by pixel ratio\n       */\n      this.height = Number(this.opt.ratio * this.opt.height);\n      /**\n       * Maximum height for a single wave\n       */\n      this.heightMax = Number(this.height / 2) - 6;\n      /**\n       * Color of the wave (used in Classic iOS)\n       */\n      this.color = \"rgb(\".concat(this.hex2rgb(this.opt.color), \")\");\n      /**\n       * An object containing controller variables that need to be interpolated\n       * to an another value before to be actually changed\n       */\n      this.interpolation = {\n        speed: this.speed,\n        amplitude: this.amplitude\n      };\n      /**\n       * Canvas DOM Element where curves will be drawn\n       */\n      this.canvas = document.createElement(\"canvas\");\n      /**\n       * 2D Context from Canvas\n       */\n      var ctx = this.canvas.getContext(\"2d\");\n      if (ctx === null) {\n        throw new Error(\"Unable to create 2D Context\");\n      }\n      this.ctx = ctx;\n      // Set dimensions\n      this.canvas.width = this.width;\n      this.canvas.height = this.height;\n      // By covering, we ensure the canvas is in the same size of the parent\n      if (this.opt.cover === true) {\n        this.canvas.style.width = this.canvas.style.height = \"100%\";\n      } else {\n        this.canvas.style.width = \"\".concat(this.width / this.opt.ratio, \"px\");\n        this.canvas.style.height = \"\".concat(this.height / this.opt.ratio, \"px\");\n      }\n      // Instantiate all curves based on the style\n      switch (this.opt.style) {\n        case \"ios9\":\n          this.curves = (this.opt.curveDefinition || iOS9Curve.getDefinition()).map(function (def) {\n            return new iOS9Curve(_this, def);\n          });\n          break;\n        case \"ios\":\n        default:\n          this.curves = (this.opt.curveDefinition || ClassicCurve.getDefinition()).map(function (def) {\n            return new ClassicCurve(_this, def);\n          });\n          break;\n      }\n      // Attach to the container\n      this.opt.container.appendChild(this.canvas);\n      // Start the animation\n      if (this.opt.autostart) {\n        this.start();\n      }\n    }\n    /**\n     * Convert an HEX color to RGB\n     */\n    SiriWave.prototype.hex2rgb = function (hex) {\n      var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n      hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n        return r + r + g + g + b + b;\n      });\n      var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n      return result ? \"\".concat(parseInt(result[1], 16).toString(), \",\").concat(parseInt(result[2], 16).toString(), \",\").concat(parseInt(result[3], 16).toString()) : null;\n    };\n    SiriWave.prototype.intLerp = function (v0, v1, t) {\n      return v0 * (1 - t) + v1 * t;\n    };\n    /**\n     * Interpolate a property to the value found in this.interpolation\n     */\n    SiriWave.prototype.lerp = function (propertyStr) {\n      var prop = this.interpolation[propertyStr];\n      if (prop !== null) {\n        this[propertyStr] = this.intLerp(this[propertyStr], prop, this.opt.lerpSpeed);\n        if (this[propertyStr] - prop === 0) {\n          this.interpolation[propertyStr] = null;\n        }\n      }\n      return this[propertyStr];\n    };\n    /**\n     * Clear the canvas\n     */\n    SiriWave.prototype.clear = function () {\n      this.ctx.globalCompositeOperation = \"destination-out\";\n      this.ctx.fillRect(0, 0, this.width, this.height);\n      this.ctx.globalCompositeOperation = \"source-over\";\n    };\n    /**\n     * Draw all curves\n     */\n    SiriWave.prototype.draw = function () {\n      this.curves.forEach(function (curve) {\n        return curve.draw();\n      });\n    };\n    /**\n     * Clear the space, interpolate values, calculate new steps and draws\n     * @returns\n     */\n    SiriWave.prototype.startDrawCycle = function () {\n      this.clear();\n      // Interpolate values\n      this.lerp(\"amplitude\");\n      this.lerp(\"speed\");\n      this.draw();\n      this.phase = (this.phase + Math.PI / 2 * this.speed) % (2 * Math.PI);\n      if (window.requestAnimationFrame) {\n        this.animationFrameId = window.requestAnimationFrame(this.startDrawCycle.bind(this));\n      } else {\n        this.timeoutId = setTimeout(this.startDrawCycle.bind(this), 20);\n      }\n    };\n    /* API */\n    /**\n     * Start the animation\n     */\n    SiriWave.prototype.start = function () {\n      if (!this.canvas) {\n        throw new Error(\"This instance of SiriWave has been disposed, please create a new instance\");\n      }\n      this.phase = 0;\n      // Ensure we don't re-launch the draw cycle\n      if (!this.run) {\n        this.run = true;\n        this.startDrawCycle();\n      }\n    };\n    /**\n     * Stop the animation\n     */\n    SiriWave.prototype.stop = function () {\n      this.phase = 0;\n      this.run = false;\n      // Clear old draw cycle on stop\n      if (this.animationFrameId) {\n        window.cancelAnimationFrame(this.animationFrameId);\n      }\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n      }\n    };\n    /**\n     * Dispose\n     */\n    SiriWave.prototype.dispose = function () {\n      this.stop();\n      if (this.canvas) {\n        this.canvas.remove();\n        this.canvas = null;\n      }\n    };\n    /**\n     * Set a new value for a property (interpolated)\n     */\n    SiriWave.prototype.set = function (propertyStr, value) {\n      this.interpolation[propertyStr] = value;\n    };\n    /**\n     * Set a new value for the speed property (interpolated)\n     */\n    SiriWave.prototype.setSpeed = function (value) {\n      this.set(\"speed\", value);\n    };\n    /**\n     * Set a new value for the amplitude property (interpolated)\n     */\n    SiriWave.prototype.setAmplitude = function (value) {\n      this.set(\"amplitude\", value);\n    };\n    return SiriWave;\n  }();\n  return SiriWave;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","SiriWave","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","ClassicCurve","ctrl","definition","ATT_FACTOR","GRAPH_X","AMPLITUDE_FACTOR","globalAttFn","x","Math","pow","xPos","width","yPos","heightMax","amplitude","attenuation","sin","opt","frequency","phase","draw","ctx","moveTo","beginPath","finalColor","color","colorHex","replace","strokeStyle","concat","opacity","lineWidth","pixelDepth","lineTo","stroke","getDefinition","iOS9Curve","SPEED_FACTOR","DEAD_PX","DESPAWN_FACTOR","NOOFCURVES_RANGES","AMPLITUDE_RANGES","OFFSET_RANGES","WIDTH_RANGES","SPEED_RANGES","DESPAWN_TIMEOUT_RANGES","noOfCurves","spawnAt","prevMaxY","phases","offsets","speeds","finalAmplitudes","widths","amplitudes","despawnTimeouts","verses","getRandomRange","random","spawnSingle","ci","getEmptyArray","count","Array","spawn","Date","now","floor","yRelativePos","y","k","abs","drawSupportLine","coo","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","globalAlpha","globalCompositeOperation","supportLine","min","max","speed","PI","maxY","Infinity","_i","_a","sign","closePath","fill","_this","container","rest","run","curves","csStyle","window","getComputedStyle","style","ratio","devicePixelRatio","cover","parseInt","height","autostart","lerpSpeed","Number","hex2rgb","interpolation","canvas","document","createElement","getContext","Error","curveDefinition","map","def","appendChild","start","hex","shorthandRegex","m","r","g","b","result","exec","toString","intLerp","v0","v1","lerp","propertyStr","prop","clear","forEach","curve","startDrawCycle","requestAnimationFrame","animationFrameId","bind","timeoutId","setTimeout","stop","cancelAnimationFrame","clearTimeout","dispose","remove","set","value","setSpeed","setAmplitude"],"sources":["C:/Users/Guenaël/Desktop/Portfolio/portfolio/node_modules/siriwave/dist/siriwave.umd.js"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.SiriWave = factory());\n})(this, (function () { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\n\n    var ClassicCurve = /** @class */ (function () {\n        function ClassicCurve(ctrl, definition) {\n            this.ATT_FACTOR = 4;\n            this.GRAPH_X = 2;\n            this.AMPLITUDE_FACTOR = 0.6;\n            this.ctrl = ctrl;\n            this.definition = definition;\n        }\n        ClassicCurve.prototype.globalAttFn = function (x) {\n            return Math.pow(this.ATT_FACTOR / (this.ATT_FACTOR + Math.pow(x, this.ATT_FACTOR)), this.ATT_FACTOR);\n        };\n        ClassicCurve.prototype.xPos = function (i) {\n            return this.ctrl.width * ((i + this.GRAPH_X) / (this.GRAPH_X * 2));\n        };\n        ClassicCurve.prototype.yPos = function (i) {\n            return (this.AMPLITUDE_FACTOR *\n                (this.globalAttFn(i) *\n                    (this.ctrl.heightMax * this.ctrl.amplitude) *\n                    (1 / this.definition.attenuation) *\n                    Math.sin(this.ctrl.opt.frequency * i - this.ctrl.phase)));\n        };\n        ClassicCurve.prototype.draw = function () {\n            var ctx = this.ctrl.ctx;\n            ctx.moveTo(0, 0);\n            ctx.beginPath();\n            var finalColor = this.definition.color || this.ctrl.color;\n            var colorHex = finalColor.replace(/rgb\\(/g, \"\").replace(/\\)/g, \"\");\n            ctx.strokeStyle = \"rgba(\".concat(colorHex, \",\").concat(this.definition.opacity, \")\");\n            ctx.lineWidth = this.definition.lineWidth;\n            // Cycle the graph from -X to +X every PX_DEPTH and draw the line\n            for (var i = -this.GRAPH_X; i <= this.GRAPH_X; i += this.ctrl.opt.pixelDepth) {\n                ctx.lineTo(this.xPos(i), this.ctrl.heightMax + this.yPos(i));\n            }\n            ctx.stroke();\n        };\n        ClassicCurve.getDefinition = function () {\n            return [\n                {\n                    attenuation: -2,\n                    lineWidth: 1,\n                    opacity: 0.1,\n                },\n                {\n                    attenuation: -6,\n                    lineWidth: 1,\n                    opacity: 0.2,\n                },\n                {\n                    attenuation: 4,\n                    lineWidth: 1,\n                    opacity: 0.4,\n                },\n                {\n                    attenuation: 2,\n                    lineWidth: 1,\n                    opacity: 0.6,\n                },\n                {\n                    attenuation: 1,\n                    lineWidth: 1.5,\n                    opacity: 1,\n                },\n            ];\n        };\n        return ClassicCurve;\n    }());\n\n    var iOS9Curve = /** @class */ (function () {\n        function iOS9Curve(ctrl, definition) {\n            this.GRAPH_X = 25;\n            this.AMPLITUDE_FACTOR = 0.8;\n            this.SPEED_FACTOR = 1;\n            this.DEAD_PX = 2;\n            this.ATT_FACTOR = 4;\n            this.DESPAWN_FACTOR = 0.02;\n            this.NOOFCURVES_RANGES = [2, 5];\n            this.AMPLITUDE_RANGES = [0.3, 1];\n            this.OFFSET_RANGES = [-3, 3];\n            this.WIDTH_RANGES = [1, 3];\n            this.SPEED_RANGES = [0.5, 1];\n            this.DESPAWN_TIMEOUT_RANGES = [500, 2000];\n            this.ctrl = ctrl;\n            this.definition = definition;\n            this.noOfCurves = 0;\n            this.spawnAt = 0;\n            this.prevMaxY = 0;\n            this.phases = [];\n            this.offsets = [];\n            this.speeds = [];\n            this.finalAmplitudes = [];\n            this.widths = [];\n            this.amplitudes = [];\n            this.despawnTimeouts = [];\n            this.verses = [];\n        }\n        iOS9Curve.prototype.getRandomRange = function (e) {\n            return e[0] + Math.random() * (e[1] - e[0]);\n        };\n        iOS9Curve.prototype.spawnSingle = function (ci) {\n            this.phases[ci] = 0;\n            this.amplitudes[ci] = 0;\n            this.despawnTimeouts[ci] = this.getRandomRange(this.DESPAWN_TIMEOUT_RANGES);\n            this.offsets[ci] = this.getRandomRange(this.OFFSET_RANGES);\n            this.speeds[ci] = this.getRandomRange(this.SPEED_RANGES);\n            this.finalAmplitudes[ci] = this.getRandomRange(this.AMPLITUDE_RANGES);\n            this.widths[ci] = this.getRandomRange(this.WIDTH_RANGES);\n            this.verses[ci] = this.getRandomRange([-1, 1]);\n        };\n        iOS9Curve.prototype.getEmptyArray = function (count) {\n            return new Array(count);\n        };\n        iOS9Curve.prototype.spawn = function () {\n            this.spawnAt = Date.now();\n            this.noOfCurves = Math.floor(this.getRandomRange(this.NOOFCURVES_RANGES));\n            this.phases = this.getEmptyArray(this.noOfCurves);\n            this.offsets = this.getEmptyArray(this.noOfCurves);\n            this.speeds = this.getEmptyArray(this.noOfCurves);\n            this.finalAmplitudes = this.getEmptyArray(this.noOfCurves);\n            this.widths = this.getEmptyArray(this.noOfCurves);\n            this.amplitudes = this.getEmptyArray(this.noOfCurves);\n            this.despawnTimeouts = this.getEmptyArray(this.noOfCurves);\n            this.verses = this.getEmptyArray(this.noOfCurves);\n            for (var ci = 0; ci < this.noOfCurves; ci++) {\n                this.spawnSingle(ci);\n            }\n        };\n        iOS9Curve.prototype.globalAttFn = function (x) {\n            return Math.pow(this.ATT_FACTOR / (this.ATT_FACTOR + Math.pow(x, 2)), this.ATT_FACTOR);\n        };\n        iOS9Curve.prototype.sin = function (x, phase) {\n            return Math.sin(x - phase);\n        };\n        iOS9Curve.prototype.yRelativePos = function (i) {\n            var y = 0;\n            for (var ci = 0; ci < this.noOfCurves; ci++) {\n                // Generate a static T so that each curve is distant from each oterh\n                var t = 4 * (-1 + (ci / (this.noOfCurves - 1)) * 2);\n                // but add a dynamic offset\n                t += this.offsets[ci];\n                var k = 1 / this.widths[ci];\n                var x = i * k - t;\n                y += Math.abs(this.amplitudes[ci] * this.sin(this.verses[ci] * x, this.phases[ci]) * this.globalAttFn(x));\n            }\n            // Divide for NoOfCurves so that y <= 1\n            return y / this.noOfCurves;\n        };\n        iOS9Curve.prototype.yPos = function (i) {\n            return (this.AMPLITUDE_FACTOR *\n                this.ctrl.heightMax *\n                this.ctrl.amplitude *\n                this.yRelativePos(i) *\n                this.globalAttFn((i / this.GRAPH_X) * 2));\n        };\n        iOS9Curve.prototype.xPos = function (i) {\n            return this.ctrl.width * ((i + this.GRAPH_X) / (this.GRAPH_X * 2));\n        };\n        iOS9Curve.prototype.drawSupportLine = function () {\n            var ctx = this.ctrl.ctx;\n            var coo = [0, this.ctrl.heightMax, this.ctrl.width, 1];\n            var gradient = ctx.createLinearGradient.apply(ctx, coo);\n            gradient.addColorStop(0, \"transparent\");\n            gradient.addColorStop(0.1, \"rgba(255,255,255,.5)\");\n            gradient.addColorStop(1 - 0.1 - 0.1, \"rgba(255,255,255,.5)\");\n            gradient.addColorStop(1, \"transparent\");\n            ctx.fillStyle = gradient;\n            ctx.fillRect.apply(ctx, coo);\n        };\n        iOS9Curve.prototype.draw = function () {\n            var ctx = this.ctrl.ctx;\n            ctx.globalAlpha = 0.7;\n            ctx.globalCompositeOperation = \"lighter\";\n            if (this.spawnAt === 0) {\n                this.spawn();\n            }\n            if (this.definition.supportLine) {\n                // Draw the support line\n                return this.drawSupportLine();\n            }\n            for (var ci = 0; ci < this.noOfCurves; ci++) {\n                if (this.spawnAt + this.despawnTimeouts[ci] <= Date.now()) {\n                    this.amplitudes[ci] -= this.DESPAWN_FACTOR;\n                }\n                else {\n                    this.amplitudes[ci] += this.DESPAWN_FACTOR;\n                }\n                this.amplitudes[ci] = Math.min(Math.max(this.amplitudes[ci], 0), this.finalAmplitudes[ci]);\n                this.phases[ci] = (this.phases[ci] + this.ctrl.speed * this.speeds[ci] * this.SPEED_FACTOR) % (2 * Math.PI);\n            }\n            var maxY = -Infinity;\n            // Write two opposite waves\n            for (var _i = 0, _a = [1, -1]; _i < _a.length; _i++) {\n                var sign = _a[_i];\n                ctx.beginPath();\n                for (var i = -this.GRAPH_X; i <= this.GRAPH_X; i += this.ctrl.opt.pixelDepth) {\n                    var x = this.xPos(i);\n                    var y = this.yPos(i);\n                    ctx.lineTo(x, this.ctrl.heightMax - sign * y);\n                    maxY = Math.max(maxY, y);\n                }\n                ctx.closePath();\n                ctx.fillStyle = \"rgba(\".concat(this.definition.color, \", 1)\");\n                ctx.strokeStyle = \"rgba(\".concat(this.definition.color, \", 1)\");\n                ctx.fill();\n            }\n            if (maxY < this.DEAD_PX && this.prevMaxY > maxY) {\n                this.spawnAt = 0;\n            }\n            this.prevMaxY = maxY;\n            return null;\n        };\n        iOS9Curve.getDefinition = function () {\n            return [\n                {\n                    color: \"255,255,255\",\n                    supportLine: true,\n                },\n                {\n                    // blue\n                    color: \"15, 82, 169\",\n                },\n                {\n                    // red\n                    color: \"173, 57, 76\",\n                },\n                {\n                    // green\n                    color: \"48, 220, 155\",\n                },\n            ];\n        };\n        return iOS9Curve;\n    }());\n\n    var SiriWave = /** @class */ (function () {\n        function SiriWave(_a) {\n            var _this = this;\n            var container = _a.container, rest = __rest(_a, [\"container\"]);\n            // Phase of the wave (passed to Math.sin function)\n            this.phase = 0;\n            // Boolean value indicating the the animation is running\n            this.run = false;\n            // Curves objects to animate\n            this.curves = [];\n            var csStyle = window.getComputedStyle(container);\n            this.opt = __assign({ container: container, style: \"ios\", ratio: window.devicePixelRatio || 1, speed: 0.2, amplitude: 1, frequency: 6, color: \"#fff\", cover: false, width: parseInt(csStyle.width.replace(\"px\", \"\"), 10), height: parseInt(csStyle.height.replace(\"px\", \"\"), 10), autostart: true, pixelDepth: 0.02, lerpSpeed: 0.1 }, rest);\n            /**\n             * Actual speed of the animation. Is not safe to change this value directly, use `setSpeed` instead.\n             */\n            this.speed = Number(this.opt.speed);\n            /**\n             * Actual amplitude of the animation. Is not safe to change this value directly, use `setAmplitude` instead.\n             */\n            this.amplitude = Number(this.opt.amplitude);\n            /**\n             * Width of the canvas multiplied by pixel ratio\n             */\n            this.width = Number(this.opt.ratio * this.opt.width);\n            /**\n             * Height of the canvas multiplied by pixel ratio\n             */\n            this.height = Number(this.opt.ratio * this.opt.height);\n            /**\n             * Maximum height for a single wave\n             */\n            this.heightMax = Number(this.height / 2) - 6;\n            /**\n             * Color of the wave (used in Classic iOS)\n             */\n            this.color = \"rgb(\".concat(this.hex2rgb(this.opt.color), \")\");\n            /**\n             * An object containing controller variables that need to be interpolated\n             * to an another value before to be actually changed\n             */\n            this.interpolation = {\n                speed: this.speed,\n                amplitude: this.amplitude,\n            };\n            /**\n             * Canvas DOM Element where curves will be drawn\n             */\n            this.canvas = document.createElement(\"canvas\");\n            /**\n             * 2D Context from Canvas\n             */\n            var ctx = this.canvas.getContext(\"2d\");\n            if (ctx === null) {\n                throw new Error(\"Unable to create 2D Context\");\n            }\n            this.ctx = ctx;\n            // Set dimensions\n            this.canvas.width = this.width;\n            this.canvas.height = this.height;\n            // By covering, we ensure the canvas is in the same size of the parent\n            if (this.opt.cover === true) {\n                this.canvas.style.width = this.canvas.style.height = \"100%\";\n            }\n            else {\n                this.canvas.style.width = \"\".concat(this.width / this.opt.ratio, \"px\");\n                this.canvas.style.height = \"\".concat(this.height / this.opt.ratio, \"px\");\n            }\n            // Instantiate all curves based on the style\n            switch (this.opt.style) {\n                case \"ios9\":\n                    this.curves = (this.opt.curveDefinition || iOS9Curve.getDefinition()).map(function (def) { return new iOS9Curve(_this, def); });\n                    break;\n                case \"ios\":\n                default:\n                    this.curves = (this.opt.curveDefinition || ClassicCurve.getDefinition()).map(function (def) { return new ClassicCurve(_this, def); });\n                    break;\n            }\n            // Attach to the container\n            this.opt.container.appendChild(this.canvas);\n            // Start the animation\n            if (this.opt.autostart) {\n                this.start();\n            }\n        }\n        /**\n         * Convert an HEX color to RGB\n         */\n        SiriWave.prototype.hex2rgb = function (hex) {\n            var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n            hex = hex.replace(shorthandRegex, function (m, r, g, b) { return r + r + g + g + b + b; });\n            var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n            return result\n                ? \"\".concat(parseInt(result[1], 16).toString(), \",\").concat(parseInt(result[2], 16).toString(), \",\").concat(parseInt(result[3], 16).toString())\n                : null;\n        };\n        SiriWave.prototype.intLerp = function (v0, v1, t) {\n            return v0 * (1 - t) + v1 * t;\n        };\n        /**\n         * Interpolate a property to the value found in this.interpolation\n         */\n        SiriWave.prototype.lerp = function (propertyStr) {\n            var prop = this.interpolation[propertyStr];\n            if (prop !== null) {\n                this[propertyStr] = this.intLerp(this[propertyStr], prop, this.opt.lerpSpeed);\n                if (this[propertyStr] - prop === 0) {\n                    this.interpolation[propertyStr] = null;\n                }\n            }\n            return this[propertyStr];\n        };\n        /**\n         * Clear the canvas\n         */\n        SiriWave.prototype.clear = function () {\n            this.ctx.globalCompositeOperation = \"destination-out\";\n            this.ctx.fillRect(0, 0, this.width, this.height);\n            this.ctx.globalCompositeOperation = \"source-over\";\n        };\n        /**\n         * Draw all curves\n         */\n        SiriWave.prototype.draw = function () {\n            this.curves.forEach(function (curve) { return curve.draw(); });\n        };\n        /**\n         * Clear the space, interpolate values, calculate new steps and draws\n         * @returns\n         */\n        SiriWave.prototype.startDrawCycle = function () {\n            this.clear();\n            // Interpolate values\n            this.lerp(\"amplitude\");\n            this.lerp(\"speed\");\n            this.draw();\n            this.phase = (this.phase + (Math.PI / 2) * this.speed) % (2 * Math.PI);\n            if (window.requestAnimationFrame) {\n                this.animationFrameId = window.requestAnimationFrame(this.startDrawCycle.bind(this));\n            }\n            else {\n                this.timeoutId = setTimeout(this.startDrawCycle.bind(this), 20);\n            }\n        };\n        /* API */\n        /**\n         * Start the animation\n         */\n        SiriWave.prototype.start = function () {\n            if (!this.canvas) {\n                throw new Error(\"This instance of SiriWave has been disposed, please create a new instance\");\n            }\n            this.phase = 0;\n            // Ensure we don't re-launch the draw cycle\n            if (!this.run) {\n                this.run = true;\n                this.startDrawCycle();\n            }\n        };\n        /**\n         * Stop the animation\n         */\n        SiriWave.prototype.stop = function () {\n            this.phase = 0;\n            this.run = false;\n            // Clear old draw cycle on stop\n            if (this.animationFrameId) {\n                window.cancelAnimationFrame(this.animationFrameId);\n            }\n            if (this.timeoutId) {\n                clearTimeout(this.timeoutId);\n            }\n        };\n        /**\n         * Dispose\n         */\n        SiriWave.prototype.dispose = function () {\n            this.stop();\n            if (this.canvas) {\n                this.canvas.remove();\n                this.canvas = null;\n            }\n        };\n        /**\n         * Set a new value for a property (interpolated)\n         */\n        SiriWave.prototype.set = function (propertyStr, value) {\n            this.interpolation[propertyStr] = value;\n        };\n        /**\n         * Set a new value for the speed property (interpolated)\n         */\n        SiriWave.prototype.setSpeed = function (value) {\n            this.set(\"speed\", value);\n        };\n        /**\n         * Set a new value for the amplitude property (interpolated)\n         */\n        SiriWave.prototype.setAmplitude = function (value) {\n            this.set(\"amplitude\", value);\n        };\n        return SiriWave;\n    }());\n\n    return SiriWave;\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}